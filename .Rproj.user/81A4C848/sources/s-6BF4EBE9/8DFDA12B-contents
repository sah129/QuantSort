```{r}
library(DT)
library(ggplot2)
library(RColorBrewer)
```

```{r}
#df<- read.csv(filelist[1,"datapath"])
df <- read.csv("samp.csv")
df
```

```{r}

nrow(filelist)
```



```{r}
files <- data.frame(files = c("Type A 1", "Type A 2", "Type B 1", "Type B 2", "Type C"))
names(files) <- "Files"


files["Group"] = ""
files
groups = c("Type A", "Type B", "Type C")
```

```{r}


for(group in groups)
{
  rows = which(grepl(group, files[,"Files"], fixed = TRUE))
  
  
  for(row in rows)
  {
    files[row, "Group"] = group
  }

}

files
```

```{r}
b
```
```{r}
display.brewer.pal(3,"Pastel1")
```


```{r}
b<-brewer.pal(n = length(groups), name = "Pastel1")


datatable(files, options = list(dom = 't')) %>% 
  formatStyle('Group',
              target = 'row',
              backgroundColor = styleEqual(groups, b))

```


```{r}
i<-inputgroups
r<-strsplit(i, ",")
u<- unlist(r)
u[1]
u[2]
```





```{r}
dm<-t(dfmpi)
write.table(dm, "samp3.csv", sep = ",", row.names = FALSE, col.names = FALSE)
```













```{r}
df <- read.csv("sorted.csv", check.names = FALSE)
melt(df)
```


```{r}
df<-beforemelt
rownames(df) <- c()
colnames(df) <- df[1,]
df<-df[-1,]

df<-as.data.frame(df)
df[] <- lapply(df, function(x) as.numeric(as.character(x)))


#df<-read.csv("forgraph.csv", check.names = FALSE)


res_graph <- ggplot(data = melt(df), aes(x = variable, y = value))+
    geom_dotplot(binaxis="y", stackdir = "center", stackratio = 0.5, binwidth=0.01, alpha=0.5, aes(color=variable), dotsize = 1.5) + 
    xlab("\nGroup") + 
    ylab("PM/vac ratio") + 
    ggtitle(paste0("title", " PM/vac ratio")) +
    stat_summary(fun.data=mean_sdl, fun.args = list(mult=1), 
                 geom="errorbar", color="black", width=0.5) +
    stat_summary(fun.y="mean", geom="point", color="black") +scale_x_discrete() + 
    theme(legend.position = "none",axis.text.x=element_text(angle = -45, hjust = 0))

res_graph
```

```{r}
good<-read.csv("forgraph.csv", check.names = FALSE)

df$`Tda4 A`
good
```




```{r}
df<-beforemelt
rownames(df) <- c()
colnames(df) <- df[1,]
df<-df[-1,]

df<-as.data.frame(df)
df
```



```{r}
df[] <- lapply(df, function(x) as.numeric(as.character(x)))
df

```



```{r}
g
gn<-str_replace(g, "\\n", "")
gn
```




```{r}
res_graph
```













